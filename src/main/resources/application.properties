spring.datasource.url=jdbc:log4jdbc:mysql://localhost:3306/sample?autoReconnect=true&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=nzpen030#
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy

# Under the hood, Spring Boot applies configuration that is equivalent to manually adding @EnableRedisHttpSession annotation.
# This creates a Spring bean with the name of springSessionRepositoryFilter that implements Filter.
# The filter is in charge of replacing the HttpSession implementation to be backed by Spring Session.
spring.session.store-type=redis

# Spring Boot automatically creates a RedisConnectionFactory that connects Spring Session to a Redis Server on localhost on port 6379 (default port).
# In a production environment, you need to update your configuration to point to your Redis server.
spring.redis.host=localhost
spring.redis.port=6379
